local d={}local function _a(ba,ca)term.setTextColor(ca)print(ba) term.setTextColor(colors.white)end local function aa(ba,...)local ca={...}local da=false for _b,ab in ipairs(ca)do if( type(ab)=="table")then for bb,cb in ipairs(ab)do if ba==cb then da=true;break end end end if type(ba)==ab then da=true;break end if(ab=="color")then if(type(ba)=="string")then if(colors[ba])then da=true;break end elseif( type(ba)=="number")then for bb,cb in pairs(colors)do if(cb==ba)then da=true;break end end end end;if(ab=="dynValue")then if(type(ba)=="string")then if(ba:sub(1,1)=="{")and (ba:sub(-1)=="}")then da=true;break end end end end;if(type(ba)=="table")then if ba.isType then for _b,ab in ipairs(ca)do if ba:isType(ab)then da=true;break end end end end if not da then local _b=debug.traceback()local ab,bb,cb;local db={}for _c in _b:gmatch("[^\n]+")do db[#db+1]=_c end;if# db>=2 then local _c=db[#db-1] cb=_c:match("^.-:.-: in function '([^']+)'$")end if not cb then cb="Unknown function"end;ab,bb=_b:match("\n([^\n]+):(%d+): in main chunk$") if ab and bb then local _c=fs.open(ab,"r") if _c then local ac=""local bc=1 repeat ac=_c.readLine()if bc==tonumber(bb)then _a("\149Line "..bb,colors.cyan) _a(ac,colors.lightGray)break end;bc=bc+1 until not ac;_c.close()end else ab="Unknown location"bb="Unknown line"end;return ab,bb,cb,_b end;return true end function d.expect(ba,ca,...)if(ba==nil)then ba=1 end;if(ca==nil)then return end;local da={...} local _b,ab,bb,cb=aa(ca,...) if(_b~=true)then local db=_b:gsub("^%s+","")if(d.basalt~=nil)then d.basalt.stop()end _a("Basalt Initialization Error:",colors.red)print(cb)print() if(_b:sub(1,1)=="/")then db=_b:sub(2)end;term.setTextColor(colors.red) term.write("Error in ")term.setTextColor(colors.white) term.write(db:gsub("/",""))term.setTextColor(colors.red)term.write(":") term.setTextColor(colors.lightBlue)term.write(ab)term.setTextColor(colors.red) term.write(": ") _a("Invalid argument in function '"..bb.. ":"..ba.."'. Expected ".. table.concat(da,", ")..", got "..type(ca),colors.red)local _c=fs.open(_b:gsub("^%s+",""),"r") if _c then print() local ac=""local bc=1 repeat ac=_c.readLine() if bc==tonumber(ab)then _a("\149Line "..ab,colors.cyan)_a("  "..ac,colors.lightGray)break end;bc=bc+1 until not ac;_c.close()else error("Unable to open file ".._b:gsub("^%s+","")..".")end;return false end;return true end;function d.getExpectData(...)return aa(...)end;return d