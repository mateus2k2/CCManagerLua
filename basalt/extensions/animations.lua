 local cda,dda,__b,a_b,b_b,c_b=math.floor,math.sin,math.cos,math.pi,math.sqrt,math.pow;local function d_b(_dc,adc,bdc)return _dc+ (adc-_dc)*bdc end local function _ab(_dc)return _dc end;local function aab(_dc)return 1 -_dc end local function bab(_dc)return _dc*_dc*_dc end;local function cab(_dc)return aab(bab(aab(_dc)))end;local function dab(_dc)return d_b(bab(_dc),cab(_dc),_dc)end;local function _bb(_dc) return dda((_dc*a_b)/2)end local function abb(_dc)return aab(__b((_dc*a_b)/2))end local function bbb(_dc)return- (__b(a_b*_dc)-1)/2 end local function cbb(_dc)local adc=1.70158;local bdc=adc+1;return bdc*_dc^3 -adc*_dc^2 end;local function dbb(_dc)return _dc^3 end;local function _cb(_dc)local adc=(2 *a_b)/3 return _dc==0 and 0 or(_dc==1 and 1 or (-2 ^ ( 10 *_dc-10)*dda((_dc*10 -10.75)*adc)))end local function acb(_dc)return _dc==0 and 0 or 2 ^ (10 *_dc-10)end local function bcb(_dc)local adc=1.70158;local bdc=adc*1.525;return _dc<0.5 and( (2 *_dc)^2 * ( (bdc+1)*2 *_dc-bdc))/2 or ( (2 *_dc-2)^2 * ( (bdc+1)* (_dc*2 -2)+bdc)+2)/2 end;local function ccb(_dc)return _dc<0.5 and 4 *_dc^3 or 1 - (-2 *_dc+2)^3 /2 end local function dcb(_dc) local adc=(2 *a_b)/4.5 return _dc==0 and 0 or(_dc==1 and 1 or ( _dc<0.5 and- (2 ^ (20 *_dc-10)* dda((20 *_dc-11.125)*adc))/2 or (2 ^ (-20 *_dc+10)*dda((20 *_dc-11.125)*adc))/2 +1))end local function _db(_dc)return _dc==0 and 0 or(_dc==1 and 1 or ( _dc<0.5 and 2 ^ (20 *_dc-10)/2 or(2 -2 ^ (-20 *_dc+10))/2))end;local function adb(_dc)return _dc<0.5 and 2 *_dc^2 or 1 - (-2 *_dc+2)^2 /2 end;local function bdb(_dc)return _dc<0.5 and 8 * _dc^4 or 1 - (-2 *_dc+2)^4 /2 end;local function cdb(_dc)return _dc<0.5 and 16 * _dc^5 or 1 - (-2 *_dc+2)^5 /2 end;local function ddb(_dc) return _dc^2 end;local function __c(_dc)return _dc^4 end local function a_c(_dc)return _dc^5 end;local function b_c(_dc)local adc=1.70158;local bdc=adc+1;return 1 +bdc* (_dc-1)^3 +adc* (_dc-1)^2 end;local function c_c(_dc)return 1 - (1 -_dc)^3 end local function d_c(_dc)local adc=(2 *a_b)/3;return  _dc==0 and 0 or(_dc==1 and 1 or( 2 ^ (-10 *_dc)*dda((_dc*10 -0.75)*adc)+1))end local function _ac(_dc)return _dc==1 and 1 or 1 -2 ^ (-10 *_dc)end;local function aac(_dc)return 1 - (1 -_dc)* (1 -_dc)end;local function bac(_dc)return 1 - ( 1 -_dc)^4 end;local function cac(_dc) return 1 - (1 -_dc)^5 end;local function dac(_dc) return 1 -b_b(1 -c_b(_dc,2))end local function _bc(_dc)return b_b(1 -c_b(_dc-1,2))end local function abc(_dc)return  _dc<0.5 and(1 -b_b(1 -c_b(2 *_dc,2)))/2 or(b_b(1 -c_b(-2 *_dc+2,2))+1)/2 end local function bbc(_dc)local adc=7.5625;local bdc=2.75 if(_dc<1 /bdc)then return adc*_dc*_dc elseif(_dc<2 /bdc)then local cdc=_dc- 1.5 /bdc;return adc*cdc*cdc+0.75 elseif(_dc<2.5 /bdc)then local cdc=_dc- 2.25 /bdc;return adc*cdc*cdc+0.9375 else local cdc=_dc-2.625 /bdc;return adc*cdc*cdc+0.984375 end end;local function cbc(_dc)return 1 -bbc(1 -_dc)end local function dbc(_dc)return _dc<0.5 and(1 - bbc(1 -2 *_dc))/2 or (1 +bbc(2 *_dc-1))/2 end local _cc={linear=_ab,lerp=d_b,flip=aab,easeIn=bab,easeInSine=abb,easeInBack=cbb,easeInCubic=dbb,easeInElastic=_cb,easeInExpo=acb,easeInQuad=ddb,easeInQuart=__c,easeInQuint=a_c,easeInCirc=dac,easeInBounce=cbc,easeOut=cab,easeOutSine=_bb,easeOutBack=b_c,easeOutCubic=c_c,easeOutElastic=d_c,easeOutExpo=_ac,easeOutQuad=aac,easeOutQuart=bac,easeOutQuint=cac,easeOutCirc=_bc,easeOutBounce=bbc,easeInOut=dab,easeInOutSine=bbb,easeInOutBack=bcb,easeInOutCubic=ccb,easeInOutElastic=dcb,easeInOutExpo=_db,easeInOutQuad=adb,easeInOutQuart=bdb,easeInOutQuint=cdb,easeInOutCirc=abc,easeInOutBounce=dbc}local acc=require("expect").expect;local bcc={}bcc.__index=bcc function bcc:new() local _dc={}setmetatable(_dc,bcc)_dc.duration=0;_dc.curTime=0 _dc.timeIncrement=0.05;_dc.ease="linear"_dc._animations={}_dc._animationCache={} _dc.onDoneHandler={}return _dc end function bcc.setEase(_dc,adc)acc(1,_dc,"table")acc(2,adc,"string")if(_cc[adc]==nil)then error( "Ease "..adc.." does not exist")end;_dc.ease=adc;return _dc end;function bcc.setIncrement(_dc,adc)acc(1,_dc,"table")acc(2,adc,"number") _dc.timeIncrement=math.max(adc,0.05)return _dc end;function bcc.on(_dc,adc) acc(1,_dc,"table")acc(2,adc,"number")adc=cda(adc*20)/20;_dc.duration=adc;return _dc end function bcc.run(_dc,adc) acc(1,_dc,"table")acc(2,adc,"function")local bdc=false;for cdc,ddc in pairs(_dc._animations)do if (ddc.time==_dc.duration)then table.insert(ddc.anims,adc)bdc=true;break end end;if(not bdc)then table.insert(_dc._animations,{time=_dc.duration,anims={adc}})end;return _dc end function bcc.wait(_dc,adc)acc(1,_dc,"table")acc(2,adc,"number") adc=cda(adc*20)/20;_dc.duration=_dc.duration+adc;return _dc end function bcc.update(_dc,adc)acc(1,_dc,"table")acc(2,adc,"number") if (adc==_dc.timerId)then _dc.curTime=_dc.curTime+_dc.timeIncrement if (_dc.curTime>=_dc.duration)then if(#_dc.onDoneHandler>0)then for bdc,cdc in pairs(_dc.onDoneHandler)do cdc()end end;_dc._animationCache={} os.cancelTimer(_dc.timerId)return end for bdc,cdc in pairs(_dc._animationCache)do if(cdc.time<=_dc.curTime)then for ddc,__d in pairs(cdc.anims)do __d(_dc)end table.remove(_dc._animationCache,bdc)end end;_dc.timerId=os.startTimer(_dc.timeIncrement)end end function bcc.play(_dc)acc(1,_dc,"table")_dc.curTime=0 _dc.timerId=os.startTimer(_dc.timeIncrement) for adc,bdc in pairs(_dc._animations)do _dc._animationCache[adc]={time=bdc.time,anims={}}for cdc,ddc in pairs(bdc.anims)do table.insert(_dc._animationCache[adc].anims,ddc)end end end function bcc.stop(_dc)acc(1,_dc,"table")os.cancelTimer(_dc.timerId)end;function bcc.onDone(_dc,adc)acc(1,_dc,"table")acc(2,adc,"function") table.insert(_dc.onDoneHandler,adc)return _dc end;local ccc={} local function dcc(_dc,adc,bdc,cdc,ddc,__d,a_d,b_d) local c_d=bcc:new()c_d:setEase(__d or"linear") if(ddc~=nil)then c_d:wait(ddc)end;local d_d,_ad=a_d(_dc) for i=0.05,cdc,0.05 do c_d:run(function(aad)local bad=_cc[aad.ease](i/cdc)local cad=math.floor( _cc.lerp(d_d,adc,bad)+0.5)local dad=math.floor( _cc.lerp(_ad,bdc,bad)+0.5) b_d(_dc,cad,dad)end):wait(0.05)end c_d:onDone(function()b_d(_dc,adc,bdc) for aad,bad in pairs(_dc.animations)do if(bad==posAnimation)then table.remove(_dc.animations,aad)break end end end):play()table.insert(_dc.animations,c_d)return c_d end function ccc:animatePosition(_dc,adc,bdc,cdc,ddc)acc(1,self,"table")acc(2,_dc,"number") acc(3,adc,"number")acc(4,bdc,"number","nil")acc(5,cdc,"number","nil") acc(6,ddc,"string","nil") return dcc(self,_dc,adc,bdc,cdc,ddc,self.getPosition,self.setPosition)end function ccc:animateSize(_dc,adc,bdc,cdc,ddc)acc(1,self,"table")acc(2,_dc,"number") acc(3,adc,"number")acc(4,bdc,"number","nil")acc(5,cdc,"number","nil") acc(6,ddc,"string","nil") return dcc(self,_dc,adc,bdc,cdc,ddc,self.getSize,self.setSize)end function ccc:animateOffset(_dc,adc,bdc,cdc,ddc)acc(1,self,"table")acc(2,_dc,"number") acc(3,adc,"number")acc(4,bdc,"number","nil")acc(5,cdc,"number","nil") acc(6,ddc,"string","nil")if(self.getOffset==nil or self.setOffset==nil)then error("Element ".. self:getType().." does not have offset!")end;return dcc(self,_dc,adc,bdc,cdc,ddc,self.getOffset,self.setOffset)end function ccc:newAnimation(_dc)acc(1,_dc,"table")return bcc:new()end function ccc.extensionProperties(_dc) local adc=require("basaltLoader").load("BasicElement")adc:initialize("VisualElement") adc:addProperty("animations","table",{})end function ccc.init(_dc)local adc=_dc.event _dc.event=function(bdc,cdc,ddc,...)if(cdc=="timer")then for __d,a_d in pairs(bdc.animations)do a_d:update(ddc)end end;if(adc)then return adc(bdc,cdc,ddc,...)end end end;return{VisualElement=ccc}