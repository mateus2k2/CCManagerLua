local _a=require("basaltLoader") local aa=_a.load("VisualElement")local ba=require("expect").expect local ca=setmetatable({},aa)ca.__index=ca;ca:initialize("TextField") ca:addProperty("lines","table",{""})ca:addProperty("lineIndex","number",1) ca:addProperty("scrollIndexX","number",1)ca:addProperty("scrollIndexY","number",1) ca:addProperty("cursorIndex","number",1) function ca:new(da,_b,ab)local bb=aa:new(da,_b,ab)setmetatable(bb,self) self.__index=self;bb:setType("TextField")bb:create("TextField") bb:setSize(10,5)return bb end ca:extend("Load",function(da)da:listenEvent("mouse_click") da:listenEvent("mouse_up")da:listenEvent("mouse_scroll")end) function ca:render()aa.render(self) for i=1,self.height do local da="" if self.lines[i+self.scrollIndexY-1]~=nil then local ab=self.lines[i+self.scrollIndexY-1] da=ab:sub(self.scrollIndexX,self.scrollIndexX+self.width-1)end;local _b=(" "):rep(self.width-da:len()) da=da.._b;self:addText(1,i,da)end end;function ca:lose_focus()aa.lose_focus(self) self.parent:setCursor(false)end function ca:adjustScrollIndices(da) if da then if self.cursorIndex<self.scrollIndexX then self.scrollIndexX=self.cursorIndex elseif self.cursorIndex>= self.scrollIndexX+self.width then self.scrollIndexX=self.cursorIndex-self.width+1 end if self.lineIndex<self.scrollIndexY then self.scrollIndexY=self.lineIndex elseif self.lineIndex>=self.scrollIndexY+self.height then self.scrollIndexY=self.lineIndex- self.height+1 end end;self.scrollIndexX=math.max(1,self.scrollIndexX) self.scrollIndexY=math.max(1,self.scrollIndexY)end function ca:updateCursor()ba(1,self,"table") if   self.cursorIndex>=self.scrollIndexX and self.cursorIndex<self.scrollIndexX+self.width and self.lineIndex>=self.scrollIndexY and self.lineIndex<self.scrollIndexY+self.height then self.parent:setCursor(true,self.x+self.cursorIndex-self.scrollIndexX, self.y+self.lineIndex-self.scrollIndexY,self:getForeground())else self.parent:setCursor(false)end end;function ca:addLine(da)ba(1,self,"table")ba(2,da,"string") table.insert(self.lines,da)return self end function ca:removeLine(da) ba(1,self,"table")ba(2,da,"number")table.remove(self.lines,da)return self end function ca:clear()ba(1,self,"table")self.lines={}return self end;function ca:getLine(da)ba(1,self,"table")ba(2,da,"number") return self.lines[da]end function ca:setLine(da,_b)ba(1,self,"table") ba(2,da,"number")ba(3,_b,"string")self.lines[da]=_b;return self end function ca:mouse_click(da,_b,ab) if(aa.mouse_click(self,da,_b,ab))then if(da==1)then if(#self.lines>0)then self.lineIndex=math.min( ab-self.y+self.scrollIndexY,#self.lines) self.cursorIndex=math.min(_b-self.x+self.scrollIndexX, self.lines[self.lineIndex]:len()+1)self:adjustScrollIndices(true)else self.lineIndex=1 self.cursorIndex=1 end end;return true end end function ca:mouse_up(da,_b,ab)if(aa.mouse_up(self,da,_b,ab))then if(da==1)then self:updateCursor()end;return true end end function ca:mouse_scroll(da,_b,ab) if(aa.mouse_scroll(self,da,_b,ab))then if da==1 then self.scrollIndexY=math.min(#self.lines- self.height+1,self.scrollIndexY+1)elseif da==-1 then self.scrollIndexY=math.max(1,self.scrollIndexY-1)end;self:adjustScrollIndices(false) self:updateCursor()self:updateRender()return true end end function ca:key(da) if(aa.key(self,da))then local _b=self.lines[self.lineIndex] if da==keys.enter then local ab=_b:sub(1,self.cursorIndex-1) local bb=_b:sub(self.cursorIndex,-1)self.lines[self.lineIndex]=ab table.insert(self.lines,self.lineIndex+1,bb)self.lineIndex=self.lineIndex+1;self.cursorIndex=1 elseif da==keys.backspace then if _b~=""and self.cursorIndex>1 then local ab=_b:sub(1,self.cursorIndex-2)local bb=_b:sub(self.cursorIndex,-1)self.lines[self.lineIndex]= ab..bb;self.cursorIndex=self.cursorIndex-1 elseif _b==""and self.lineIndex>1 then table.remove(self.lines,self.lineIndex)self.lineIndex=self.lineIndex-1;self.cursorIndex= self.lines[self.lineIndex]:len()+1 elseif self.cursorIndex==1 and self.lineIndex>1 then self.cursorIndex= self.lines[self.lineIndex-1]:len()+1 self.lines[self.lineIndex-1]=self.lines[ self.lineIndex-1]..self.lines[self.lineIndex]table.remove(self.lines,self.lineIndex)self.lineIndex= self.lineIndex-1 end elseif da==keys.delete then if _b~=""and self.cursorIndex<=_b:len()then local ab=_b:sub(1, self.cursorIndex-1) local bb=_b:sub(self.cursorIndex+1,-1)self.lines[self.lineIndex]=ab..bb elseif _b==""and self.lineIndex< #self.lines then table.remove(self.lines,self.lineIndex)elseif self.cursorIndex==_b:len()+1 and self.lineIndex<#self.lines then self.lines[self.lineIndex]=self.lines[self.lineIndex].. self.lines[self.lineIndex+1]table.remove(self.lines, self.lineIndex+1)end elseif da==keys.up and self.lineIndex>1 then self.lineIndex=self.lineIndex-1 self.cursorIndex=math.min(self.cursorIndex, self.lines[self.lineIndex]:len()+1)elseif da==keys.down and self.lineIndex<#self.lines then self.lineIndex= self.lineIndex+1 self.cursorIndex=math.min(self.cursorIndex, self.lines[self.lineIndex]:len()+1)elseif da==keys.left then self.cursorIndex=math.max(1,self.cursorIndex-1)elseif da==keys.right then self.cursorIndex=math.min(_b:len()+1,self.cursorIndex+1)end;self:adjustScrollIndices(true) self:updateCursor()self:updateRender()return true end end function ca:char(da) if(aa.char(self,da))then local _b=self.lines[self.lineIndex]local ab=_b:sub(1, self.cursorIndex-1) local bb=_b:sub(self.cursorIndex,-1)self.lines[self.lineIndex]=ab..da..bb;self.cursorIndex= self.cursorIndex+1;self:adjustScrollIndices(true) self:updateCursor()self:updateRender()return true end end;return ca