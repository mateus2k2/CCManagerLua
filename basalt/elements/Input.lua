local _a=require("basaltLoader") local aa=_a.load("VisualElement")local ba=require("utils").tHex;local ca=setmetatable({},aa) ca.__index=ca;ca:initialize("Input") ca:addProperty("value","string","")ca:addProperty("cursorIndex","number",1) ca:addProperty("scrollIndex","number",1)ca:addProperty("inputLimit","number",nil) ca:addProperty("inputType","string","text")ca:addProperty("placeholderText","string","") ca:addProperty("placeholderColor","color",colors.gray) ca:addProperty("placeholderBackground","color",colors.black) ca:combineProperty("placeholder","placeholderText","placeholderColor","placeholderBackground")ca:addListener("change","change_value") ca:addListener("enter","enter_pressed") function ca:new(da,_b,ab)local bb=aa:new(da,_b,ab)setmetatable(bb,self) self.__index=self;bb:setType("Input")bb:create("Input") bb:setSize(10,1)bb:setZ(5)return bb end function ca.render(da)aa.render(da)local _b=da:getValue()local ab=da:getWidth() local bb=false if(_b=="")then _b=da:getPlaceholderText()bb=true end local cb=_b:sub(da.scrollIndex,da.scrollIndex+ab-1) if(da.inputType=="password")then cb=("*"):rep(cb:len())end;local db=(" "):rep(ab-cb:len())cb=cb..db da:addText(1,1,cb)if(bb)then da:addBg(1,1,ba[da:getPlaceholderBackground()]:rep(ab)) da:addFg(1,1,ba[da:getPlaceholderColor()]:rep(cb:len()))end end ca:extend("Load",function(da)da:listenEvent("mouse_click") da:listenEvent("mouse_up")end)function ca:lose_focus()aa.lose_focus(self) self.parent:setCursor(false)end function ca:mouse_up(da,_b,ab) if(aa.mouse_up(self,da,_b,ab))then if(da==1)then self.cursorIndex=math.min( _b-self.x+self.scrollIndex,self.value:len()+1) self.parent:setCursor(true,self.x+self.cursorIndex-self.scrollIndex,self.y,self:getForeground())end;return true end end function ca:key(da) if(aa.key(self,da))then if da==keys.backspace and self.value~=""and self.cursorIndex>1 then local _b=self.value:sub(1,self.cursorIndex-2)local ab=self.value:sub(self.cursorIndex,-1) self.value=_b..ab;self.cursorIndex=self.cursorIndex-1 self:updateRender()elseif da==keys.left then self.cursorIndex=math.max(1,self.cursorIndex-1)self:updateRender()elseif da==keys.right then self.cursorIndex=math.min( self.value:len()+1,self.cursorIndex+1)self:updateRender()elseif da==keys.enter then self:fireEvent("enter",self.value)self:setFocused(false)self:adjustScrollIndex() self:updateRender()return end;self:adjustScrollIndex() self.parent:setCursor(true, self.x+self.cursorIndex-self.scrollIndex,self.y,self:getForeground())return true end end function ca:char(da) if(aa.char(self,da))then if self.inputLimit and self.value:len()>=self.inputLimit then return true end if self.inputType=="number"and not tonumber(da)then if (da==","or da==".")and self.value:find("[.,]")then return true elseif da~=","and da~="."then return true end end;local _b=self.value:sub(1,self.cursorIndex-1)local ab=self.value:sub(self.cursorIndex, -1)self.value=_b..da..ab;self.cursorIndex= self.cursorIndex+1 self:fireEvent("change",self.value)self:adjustScrollIndex()self:updateRender() self.parent:setCursor(true, self.x+self.cursorIndex-self.scrollIndex,self.y,self:getForeground())return true end end function ca:adjustScrollIndex()local da=self:getWidth() local _b=self:getCursorIndex()local ab=self:getScrollIndex() if _b<ab then ab=_b elseif _b>ab+da-1 then ab=_b-da+1 end;self:setScrollIndex(ab)end;return ca