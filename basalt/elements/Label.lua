local ca=require("basaltLoader") local da=ca.load("VisualElement")local _b=require("utils")local ab=_b.wrapText local bb=setmetatable({},da)bb.__index=bb;local cb,db=string.sub,string.rep bb:initialize("Label")bb:addProperty("autoSize","boolean",true) bb:addProperty("wrapUpdate","boolean",true)bb:addProperty("wrap","boolean",false) bb:addProperty("wrappedText","table",{},nil,function(_c,ac) _c:setWrap(true)end,function(_c)local ac=_c:getWrap()local bc=_c:getAutoSize()if (_c:getWrapUpdate())then _c:setWrapUpdate(false) _c.wrappedText=ab(_c:getText(),_c:getWidth())end;if(bc)and(ac)then _c:setHeight(#_c.wrappedText)_c:updateRender()end return _c.wrappedText end) bb:addProperty("text","string","My Label",nil,function(_c,ac)local bc=_c:getWrap()local cc=_c:getAutoSize()if(bc)then _c:setWrapUpdate(true)end if(cc)and not(bc)then _c:setSize(ac:len(),1)end end) function bb:new(_c,ac,bc)local cc=da:new(_c,ac,bc)setmetatable(cc,self) self.__index=self;cc:setType("Label")cc:create("Label")return cc end bb:extend("Init",function(_c) _c:setBackground(_c.parent:getBackground()) _c:setForeground(_c.parent:getForeground()) _c:addPropertyObserver("width",function() if(_c.autoSize)and(_c.wrap)then _c:setWrapUpdate(true) local ac=_c:getWrappedText()_c:setHeight(#ac)end end)end) function bb:render()da.render(self)local _c=self:getText() local ac=self:getWrap() if(ac)then local bc=self:getWrappedText()local cc=self:getHeight() for dc,_d in ipairs(bc)do if(dc<=cc)then self:addText(1,dc,_d)end end else self:addText(1,1,_c)end end;return bb