 local aa=require("basaltLoader").load("Container")local ba=require("expect").expect local ca=setmetatable({},aa)ca.__index=ca;ca:initialize("ScrollableFrame") ca:addProperty("scrollDirection","string","vertical")ca:addProperty("autoScroll","boolean",true) ca:addProperty("scrollAmount","number",10) function ca:new(ab,bb,cb)local db=aa:new(ab,bb,cb)setmetatable(db,self) self.__index=self;db:setType("ScrollableFrame") db:create("ScrollableFrame")db:setZ(10)db:setSize(30,15)return db end ca:extend("Load",function(ab)ab:listenEvent("mouse_scroll")end)local function da(ab)local bb=0;for cb,db in pairs(ab:getChildren())do bb=math.max(bb,db:getY()+db:getHeight())end return bb-ab:getHeight()end local function _b(ab) local bb=0;for cb,db in pairs(ab:getChildren())do bb=math.max(bb,db:getX()+db:getWidth())end;return bb-ab:getWidth()end function ca:scrollVertical(ab)ba(1,self,"table")ba(2,ab,"number") local bb=self:getAutoScroll()local cb=0;local db=self:getYOffset()local _c=self:getHeight() if(bb)then cb=da(self)else cb=self:getScrollAmount()+_c end if(ab>0)then if(db<cb)then self:setYOffset(db+ab)end else if(db>0)then self:setYOffset( db+ab)end end;self:updateRender()return self end function ca:getAllowedScrollAmount()ba(1,self,"table") local ab=self:getScrollDirection() if not(self:getAutoScroll())then return self:getScrollAmount()end;if(ab=="vertical")then return da(self)else return _b(self)end end function ca:scrollHorizontal(ab)ba(1,self,"table")ba(2,ab,"number") local bb=self:getAutoScroll()local cb=0;local db=self:getXOffset()local _c=self:getWidth() if(bb)then cb=_b(self)else cb=self:getScrollAmount()+_c end if(ab>0)then if(db<cb)then self:setXOffset(db+ab)end else if(db>0)then self:setXOffset( db+ab)end end;self:updateRender()return self end function ca:mouse_scroll(ab,bb,cb) if(aa.mouse_scroll(self,ab,bb,cb))then local db=self:getScrollDirection()if(db=="vertical")then self:scrollVertical(ab)else self:scrollHorizontal(ab)end;return true end end;return ca