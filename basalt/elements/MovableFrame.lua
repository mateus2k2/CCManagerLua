 local d=require("basaltLoader").load("Container")local _a=require("expect").expect;local aa=setmetatable({},d) aa.__index=aa;aa:initialize("MovableFrame") aa:addProperty("dragMap","table",{{x=1,y=1,w=0,h=1}}) function aa:new(ba,ca,da)local _b=d:new(ba,ca,da)setmetatable(_b,self) self.__index=self;_b:setType("MovableFrame") _b:create("MovableFrame")_b:setZ(10)_b:setSize(30,15)return _b end aa:extend("Load",function(ba)ba:listenEvent("mouse_click") ba:listenEvent("mouse_up")ba:listenEvent("mouse_drag")end) function aa:isInDragMap(ba,ca)_a(1,self,"table")_a(2,ba,"number") _a(3,ca,"number")local da,_b=self:getRelativePosition(ba,ca) for ab,bb in pairs(self.dragMap)do local cb,db= bb.w-1,bb.h-1;if(bb.w<=0)then cb=self.width end;if(bb.h<=0)then db=self.height end if( da>=bb.x and da<=bb.x+cb and _b>=bb.y and _b<=bb.y+db)then return true end end;return false end function aa:addDragArea(ba,ca,da,_b)_a(1,self,"table")_a(2,ba,"number") _a(3,ca,"number")_a(4,da,"number")_a(5,_b,"number") table.insert(self.dragMap,{x=ba,y=ca,w=da,h=_b})return self end function aa:mouse_click(ba,ca,da) if(d.mouse_click(self,ba,ca,da))then if(ba==1)then if(self:isInDragMap(ca,da))then self.isDragging=true;self.dragX=ca;self.dragY=da end return true end end end function aa:mouse_up(ba,ca,da)self.isDragging=false;return d.mouse_up(self,ba,ca,da)end function aa:mouse_drag(ba,ca,da)d.mouse_drag(self,ba,ca,da) if(self.isDragging)then local _b=ca-self.dragX;local ab=da-self.dragY;self.dragX=ca;self.dragY=da;self:setPosition(self.x+_b, self.y+ab)return true end end;return aa