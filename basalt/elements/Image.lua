local _b=require("basaltLoader") local ab=_b.load("VisualElement")local bb=require("expect").expect local cb=require("utils").tHex;local db,_c=string.sub,string.sub;local ac=setmetatable({},ab) ac.__index=ac;ac:initialize("Image") ac:addProperty("paletteUsage","boolean",false,nil,function(dc,_d)if(_d)then dc:updatePalette()end;return _d end)ac:addProperty("frame","number",1) ac:addProperty("autoSize","boolean",true,nil,function(dc,_d) if(_d)then local ad=dc:getImage()dc:setSize(#ad[1][1][1],#ad[1])end;return _d end) ac:addProperty("image","table",{},nil,function(dc,_d)if(dc:getAutoSize())then dc:setSize(#_d[1][1][1],#_d[1])end;if(dc:getPaletteUsage())then dc:updatePalette()end end) function ac:new(dc,_d,ad)local bd=ab:new(dc,_d,ad)setmetatable(bd,self) self.__index=self;bd:setType("Image")bd:create("Image") bd:setSize(20,8)bd:setZ(5)return bd end function ac:render()ab.render(self)local dc=self:getImage() local _d=self:getFrame()local ad,bd=self:getSize() if(dc~=nil)then if dc[_d]~=nil then for y=1,#dc[_d]do local cd=dc[_d][y] self:addBlit(1,y,db(cd[1],1,ad),db(cd[2],1,ad),db(cd[3],1,ad))if(y>=bd)then break end end end end end function ac:loadImage(dc)bb(1,dc,"string")local _d=fs.open(dc,"r") if(_d==nil)then error("Image "..dc.. " not found!")end;local ad=textutils.unserialize(_d.readAll()) _d.close()if(ad==nil)then error("Image "..dc.." is not a valid image!")end;self:setImage(ad)return self end function ac:play()local dc=self:getImage()local _d=self:getFrame()if (self:getPaletteUsage())then self:updatePalette()end if (dc.animation)or(dc.animated)then local ad=dc[_d].duration or dc.secondsPerFrame or 0.05;self.animTimer=os.startTimer(ad)end;return self end;function ac:stop() if(self.animTimer)then os.cancelTimer(self.animTimer)end;return self end function ac:event(dc,_d,...) ab.event(self,dc,_d,...) if(dc=="timer")then if(_d==self.animTimer)then local ad=self:getImage() local bd=self:getFrame() if(ad[bd+1]==nil)then self:setFrame(1)else self:setFrame(bd+1)end;self:play()end end end function ac:updatePalette()local dc={}local _d=self:getImage()local ad=self:getFrame() if( _d[ad]~=nil)then if(_d.palette)then for bd,cd in pairs(_d.palette)do local dd= type(bd)=="string"and colors[bd]or bd^2;dc[dd]=cd end end if(_d[ad].palette)then for bd,cd in pairs(_d[ad].palette)do local dd=type(bd)=="string"and colors[bd]or bd^2;dc[dd]=cd end end end;for bd,cd in pairs(dc)do self:getParent():getTerm().setPaletteColor(bd,table.unpack(cd))end;return self end function ac:getMetadata(dc) if(dc~=nil)then if(self:getImage()[dc]~=nil)then return self:getImage()[dc]end;return end;local _d={}for ad,bd in pairs(self:getImage())do if(type(ad)=="string")then _d[ad]=bd end end;return _d end local function bc(dc,_d,ad,bd) local cd,dd=cb[dc:getBackground()],cb[dc:getForeground()] local __a,a_a=math.max(#_d[1][1][1],ad),math.max(#_d,bd) for b_a,c_a in ipairs(_d)do for i=1,a_a do if(c_a[i]==nil)then c_a[i]={_c(" ",__a),_c(dd,__a),_c(cd,__a)}end;if(#c_a[i][1]<__a)then c_a[i][1]= c_a[i][1]..string.rep(" ",__a-#c_a[i][1])end;if(#c_a[i][2]<__a)then c_a[i][2]= c_a[i][2]..string.rep(dd,__a-#c_a[i][2])end;if(#c_a[i][3]<__a)then c_a[i][3]= c_a[i][3]..string.rep(cd,__a-#c_a[i][3])end end end end local function cc(dc,_d,ad,bd,cd,dd,__a) if(#_d[1][1][1]<bd+#dd-1)or(#_d<cd)then bc(dc,_d, bd+#dd-1,cd)if(dc:getAutoSize())then dc:setSize(#_d[1][1][1],# _d[1])end end _d[ad][cd][__a]=db(_d[ad][cd][__a],1,bd-1)..dd..db(_d[ad][cd][__a], bd+#dd)dc:updateRender()end function ac:drawText(dc,_d,ad,bd)bb(1,dc,"number")bb(2,_d,"number") bb(3,ad,"string")bb(4,bd,"string","nil")local cd=self:getImage() local dd=self:getFrame()cc(self,cd,bd or dd,dc,_d,ad,1)return self end function ac:drawForeground(dc,_d,ad,bd)bb(1,dc,"number")bb(2,_d,"number") bb(3,ad,"string")bb(4,bd,"string","nil")local cd=self:getImage() local dd=self:getFrame()cc(self,cd,bd or dd,dc,_d,ad,2)return self end function ac:drawBackground(dc,_d,ad,bd)bb(1,dc,"number")bb(2,_d,"number") bb(3,ad,"string")bb(4,bd,"string","nil")local cd=self:getImage() local dd=self:getFrame()cc(self,cd,bd or dd,dc,_d,ad,3)return self end;return ac